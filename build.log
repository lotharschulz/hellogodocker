$ docker images
REPOSITORY          TAG                 IMAGE ID            CREATED             SIZE

$ time make build.docker-cache 
go build -o hellogo -v
docker build --cache-from golang:1.10.3 --cache-from alpine:latest -t dockerhub/hellogo:046561d-dirty -f Dockerfile .
Sending build context to Docker daemon  21.06MB
Step 1/9 : FROM golang:1.10.3 as builder
1.10.3: Pulling from library/golang
cc1a78bfd46b: Pull complete 
d2c05365ee2a: Pull complete 
231cb0e216d3: Pull complete 
3d2aa70286b8: Pull complete 
d5d81a1460e2: Pull complete 
b1a1cad86fe9: Pull complete 
e0b187cbf2ab: Pull complete 
Digest: sha256:80fa52964480e2e32dc2a82a04dfd41797787383a547f2498baaa87584bae672
Status: Downloaded newer image for golang:1.10.3
 ---> 52057de6c8d0
Step 2/9 : WORKDIR /go/src/github.com/lotharschulz/hellogodocker/
Removing intermediate container 1b067140b4d7
 ---> 573b3e9efbb9
Step 3/9 : COPY hello.go	.
 ---> 5f0151bbef37
Step 4/9 : RUN CGO_ENABLED=0 GOOS=linux go build -a -installsuffix cgo -o hellogodocker .
 ---> Running in b8cd403e1ea2
Removing intermediate container b8cd403e1ea2
 ---> a0d645e8226d
Step 5/9 : FROM alpine:latest
latest: Pulling from library/alpine
ff3a5c916c92: Already exists 
Digest: sha256:e1871801d30885a610511c867de0d6baca7ed4e6a2573d506bbec7fd3b03873f
Status: Downloaded newer image for alpine:latest
 ---> 3fd9065eaf02
Step 6/9 : RUN apk --no-cache add ca-certificates
 ---> Running in 5bc2edd61cf6
fetch http://dl-cdn.alpinelinux.org/alpine/v3.7/main/x86_64/APKINDEX.tar.gz
fetch http://dl-cdn.alpinelinux.org/alpine/v3.7/community/x86_64/APKINDEX.tar.gz
(1/1) Installing ca-certificates (20171114-r0)
Executing busybox-1.27.2-r7.trigger
Executing ca-certificates-20171114-r0.trigger
OK: 5 MiB in 12 packages
Removing intermediate container 5bc2edd61cf6
 ---> b93c73a95324
Step 7/9 : WORKDIR /root/
Removing intermediate container a5b7b153b71f
 ---> c6f1642c4815
Step 8/9 : COPY --from=builder /go/src/github.com/lotharschulz/hellogodocker/hellogodocker .
 ---> 3d72c03f43fa
Step 9/9 : CMD ["./hellogodocker"]
 ---> Running in 019dbfcb27f0
Removing intermediate container 019dbfcb27f0
 ---> 4f88a99379a7
Successfully built 4f88a99379a7
Successfully tagged dockerhub/hellogo:046561d-dirty

real	1m10.905s
user	0m0.380s
sys	0m0.116s

-> change https://github.com/lotharschulz/hellogodocker/commit/0d780685bf65193485dc90c6e1d5312ba556dc73

$ time make build.docker-cache 
go build -o hellogo -v
docker build --cache-from golang:1.10.3 --cache-from alpine:latest -t dockerhub/hellogo:0d78068-dirty -f Dockerfile .
Sending build context to Docker daemon  21.08MB
Step 1/9 : FROM golang:1.10.3 as builder
 ---> 52057de6c8d0
Step 2/9 : WORKDIR /go/src/github.com/lotharschulz/hellogodocker/
Removing intermediate container b243b64eebeb
 ---> 3d60d50cf67a
Step 3/9 : COPY hello.go	.
 ---> 186455fca4ec
Step 4/9 : RUN CGO_ENABLED=0 GOOS=linux go build -a -installsuffix cgo -o hellogodocker .
 ---> Running in 602f1cabb10e
Removing intermediate container 602f1cabb10e
 ---> eced9325ff08
Step 5/9 : FROM alpine:latest
 ---> 3fd9065eaf02
Step 6/9 : RUN apk --no-cache add ca-certificates
 ---> Running in 565efa3e4c62
fetch http://dl-cdn.alpinelinux.org/alpine/v3.7/main/x86_64/APKINDEX.tar.gz
fetch http://dl-cdn.alpinelinux.org/alpine/v3.7/community/x86_64/APKINDEX.tar.gz
(1/1) Installing ca-certificates (20171114-r0)
Executing busybox-1.27.2-r7.trigger
Executing ca-certificates-20171114-r0.trigger
OK: 5 MiB in 12 packages
Removing intermediate container 565efa3e4c62
 ---> 9c4d2efe8fb3
Step 7/9 : WORKDIR /root/
Removing intermediate container f89b0376308a
 ---> e49235db13b4
Step 8/9 : COPY --from=builder /go/src/github.com/lotharschulz/hellogodocker/hellogodocker .
 ---> cefb5048987a
Step 9/9 : CMD ["./hellogodocker"]
 ---> Running in 4e41d7471c74
Removing intermediate container 4e41d7471c74
 ---> 5cd904cb4418
Successfully built 5cd904cb4418
Successfully tagged dockerhub/hellogo:0d78068-dirty

real	0m12.035s
user	0m0.840s
sys	0m0.120s

-> change https://github.com/lotharschulz/hellogodocker/commit/0ddde17fbe7a47f41e919ed9fcb4776138769478

$ time make build.docker-cache go build -o hellogo -v
docker build --cache-from golang:1.10.3 --cache-from alpine:latest -t dockerhub/hellogo:0ddde17-dirty -f Dockerfile .
Sending build context to Docker daemon  21.09MB
Step 1/9 : FROM golang:1.10.3 as builder
 ---> 52057de6c8d0
Step 2/9 : WORKDIR /go/src/github.com/lotharschulz/hellogodocker/
Removing intermediate container 96260ad03bf8
 ---> 17487a76a84b
Step 3/9 : COPY hello.go	.
 ---> 4d161171017a
Step 4/9 : RUN CGO_ENABLED=0 GOOS=linux go build -a -installsuffix cgo -o hellogodocker .
 ---> Running in 882c9740ecd9
Removing intermediate container 882c9740ecd9
 ---> 6b51937bb9fe
Step 5/9 : FROM alpine:latest
 ---> 3fd9065eaf02
Step 6/9 : RUN apk --no-cache add ca-certificates
 ---> Running in 181b92c939fb
fetch http://dl-cdn.alpinelinux.org/alpine/v3.7/main/x86_64/APKINDEX.tar.gz
fetch http://dl-cdn.alpinelinux.org/alpine/v3.7/community/x86_64/APKINDEX.tar.gz
(1/1) Installing ca-certificates (20171114-r0)
Executing busybox-1.27.2-r7.trigger
Executing ca-certificates-20171114-r0.trigger
OK: 5 MiB in 12 packages
Removing intermediate container 181b92c939fb
 ---> 843e6318b7d5
Step 7/9 : WORKDIR /root/
Removing intermediate container 306a401a4d44
 ---> 73ef96525411
Step 8/9 : COPY --from=builder /go/src/github.com/lotharschulz/hellogodocker/hellogodocker .
 ---> 11b1fa3886f1
Step 9/9 : CMD ["./hellogodocker"]
 ---> Running in 5ff6403886da
Removing intermediate container 5ff6403886da
 ---> 6a53949141bf
Successfully built 6a53949141bf
Successfully tagged dockerhub/hellogo:0ddde17-dirty

real	0m12.183s
user	0m0.756s
sys	0m0.148s

-> no change

$ time make build.docker-cache 
go build -o hellogo -v
docker build --cache-from golang:1.10.3 --cache-from alpine:latest -t dockerhub/hellogo:0ddde17-dirty -f Dockerfile .
Sending build context to Docker daemon  21.09MB
Step 1/9 : FROM golang:1.10.3 as builder
 ---> 52057de6c8d0
Step 2/9 : WORKDIR /go/src/github.com/lotharschulz/hellogodocker/
Removing intermediate container 72408924dcc2
 ---> 169ad1128f62
Step 3/9 : COPY hello.go	.
 ---> 8bec8061f87b
Step 4/9 : RUN CGO_ENABLED=0 GOOS=linux go build -a -installsuffix cgo -o hellogodocker .
 ---> Running in c516b4c3d76e
Removing intermediate container c516b4c3d76e
 ---> 82dee895c54a
Step 5/9 : FROM alpine:latest
 ---> 3fd9065eaf02
Step 6/9 : RUN apk --no-cache add ca-certificates
 ---> Running in d997c111b1e0
fetch http://dl-cdn.alpinelinux.org/alpine/v3.7/main/x86_64/APKINDEX.tar.gz
fetch http://dl-cdn.alpinelinux.org/alpine/v3.7/community/x86_64/APKINDEX.tar.gz
(1/1) Installing ca-certificates (20171114-r0)
Executing busybox-1.27.2-r7.trigger
Executing ca-certificates-20171114-r0.trigger
OK: 5 MiB in 12 packages
Removing intermediate container d997c111b1e0
 ---> d9811f4fb429
Step 7/9 : WORKDIR /root/
Removing intermediate container f3628888bac4
 ---> e86e6f19c0ea
Step 8/9 : COPY --from=builder /go/src/github.com/lotharschulz/hellogodocker/hellogodocker .
 ---> 448b0ac5f3fc
Step 9/9 : CMD ["./hellogodocker"]
 ---> Running in 07c7aa11cbd5
Removing intermediate container 07c7aa11cbd5
 ---> 62c7c7897a28
Successfully built 62c7c7897a28
Successfully tagged dockerhub/hellogo:0ddde17-dirty

real	0m11.907s
user	0m0.268s
sys	0m0.052s

-> no change

$ time make build.docker-cache 
go build -o hellogo -v
docker build --cache-from golang:1.10.3 --cache-from alpine:latest -t dockerhub/hellogo:0ddde17-dirty -f Dockerfile .
Sending build context to Docker daemon  21.09MB
Step 1/9 : FROM golang:1.10.3 as builder
 ---> 52057de6c8d0
Step 2/9 : WORKDIR /go/src/github.com/lotharschulz/hellogodocker/
Removing intermediate container b28363fe61d1
 ---> f1d4283ec3e7
Step 3/9 : COPY hello.go	.
 ---> fc527fce0bbf
Step 4/9 : RUN CGO_ENABLED=0 GOOS=linux go build -a -installsuffix cgo -o hellogodocker .
 ---> Running in 027cc0096eca
Removing intermediate container 027cc0096eca
 ---> eb18cb1f23b2
Step 5/9 : FROM alpine:latest
 ---> 3fd9065eaf02
Step 6/9 : RUN apk --no-cache add ca-certificates
 ---> Running in 53a505940481
fetch http://dl-cdn.alpinelinux.org/alpine/v3.7/main/x86_64/APKINDEX.tar.gz
fetch http://dl-cdn.alpinelinux.org/alpine/v3.7/community/x86_64/APKINDEX.tar.gz
(1/1) Installing ca-certificates (20171114-r0)
Executing busybox-1.27.2-r7.trigger
Executing ca-certificates-20171114-r0.trigger
OK: 5 MiB in 12 packages
Removing intermediate container 53a505940481
 ---> caef9b045e9d
Step 7/9 : WORKDIR /root/
Removing intermediate container 8c74500ab3f6
 ---> 088ddd566611
Step 8/9 : COPY --from=builder /go/src/github.com/lotharschulz/hellogodocker/hellogodocker .
 ---> 062cb9c6d42d
Step 9/9 : CMD ["./hellogodocker"]
 ---> Running in 9b30aca98b6a
Removing intermediate container 9b30aca98b6a
 ---> 26c97edf4534
Successfully built 26c97edf4534
Successfully tagged dockerhub/hellogo:0ddde17-dirty

real	0m11.503s
user	0m0.276s
sys	0m0.052s

-> no change

$ time make build.docker
go build -o hellogo -v
docker build --rm -t dockerhub/hellogo:0ddde17-dirty -f Dockerfile .
Sending build context to Docker daemon  21.09MB
Step 1/9 : FROM golang:1.10.3 as builder
 ---> 52057de6c8d0
Step 2/9 : WORKDIR /go/src/github.com/lotharschulz/hellogodocker/
 ---> Using cache
 ---> f1d4283ec3e7
Step 3/9 : COPY hello.go	.
 ---> Using cache
 ---> fc527fce0bbf
Step 4/9 : RUN CGO_ENABLED=0 GOOS=linux go build -a -installsuffix cgo -o hellogodocker .
 ---> Using cache
 ---> eb18cb1f23b2
Step 5/9 : FROM alpine:latest
 ---> 3fd9065eaf02
Step 6/9 : RUN apk --no-cache add ca-certificates
 ---> Using cache
 ---> caef9b045e9d
Step 7/9 : WORKDIR /root/
 ---> Using cache
 ---> 088ddd566611
Step 8/9 : COPY --from=builder /go/src/github.com/lotharschulz/hellogodocker/hellogodocker .
 ---> Using cache
 ---> 062cb9c6d42d
Step 9/9 : CMD ["./hellogodocker"]
 ---> Using cache
 ---> 26c97edf4534
Successfully built 26c97edf4534
Successfully tagged dockerhub/hellogo:0ddde17-dirty

real	0m0.453s
user	0m0.244s
sys	0m0.080s

-> no change

$ time make build.docker
go build -o hellogo -v
docker build --rm -t dockerhub/hellogo:0ddde17-dirty -f Dockerfile .
Sending build context to Docker daemon  21.09MB
Step 1/9 : FROM golang:1.10.3 as builder
 ---> 52057de6c8d0
Step 2/9 : WORKDIR /go/src/github.com/lotharschulz/hellogodocker/
 ---> Using cache
 ---> f1d4283ec3e7
Step 3/9 : COPY hello.go	.
 ---> Using cache
 ---> fc527fce0bbf
Step 4/9 : RUN CGO_ENABLED=0 GOOS=linux go build -a -installsuffix cgo -o hellogodocker .
 ---> Using cache
 ---> eb18cb1f23b2
Step 5/9 : FROM alpine:latest
 ---> 3fd9065eaf02
Step 6/9 : RUN apk --no-cache add ca-certificates
 ---> Using cache
 ---> caef9b045e9d
Step 7/9 : WORKDIR /root/
 ---> Using cache
 ---> 088ddd566611
Step 8/9 : COPY --from=builder /go/src/github.com/lotharschulz/hellogodocker/hellogodocker .
 ---> Using cache
 ---> 062cb9c6d42d
Step 9/9 : CMD ["./hellogodocker"]
 ---> Using cache
 ---> 26c97edf4534
Successfully built 26c97edf4534
Successfully tagged dockerhub/hellogo:0ddde17-dirty

real	0m0.450s
user	0m0.264s
sys	0m0.064s

-> change https://github.com/lotharschulz/hellogodocker/commit/bb30e497b5f85c77dc96c3a26c16b2e4f3e45e9d

$ time make build.docker
go build -o hellogo -v
docker build --rm -t dockerhub/hellogo:bb30e49-dirty -f Dockerfile .
Sending build context to Docker daemon   21.1MB
Step 1/9 : FROM golang:1.10.3 as builder
 ---> 52057de6c8d0
Step 2/9 : WORKDIR /go/src/github.com/lotharschulz/hellogodocker/
 ---> Using cache
 ---> f1d4283ec3e7
Step 3/9 : COPY hello.go	.
 ---> 0d39ed96d34c
Step 4/9 : RUN CGO_ENABLED=0 GOOS=linux go build -a -installsuffix cgo -o hellogodocker .
 ---> Running in 98a6a302553d
Removing intermediate container 98a6a302553d
 ---> ce29dabcc1b6
Step 5/9 : FROM alpine:latest
 ---> 3fd9065eaf02
Step 6/9 : RUN apk --no-cache add ca-certificates
 ---> Using cache
 ---> caef9b045e9d
Step 7/9 : WORKDIR /root/
 ---> Using cache
 ---> 088ddd566611
Step 8/9 : COPY --from=builder /go/src/github.com/lotharschulz/hellogodocker/hellogodocker .
 ---> 5195961344b8
Step 9/9 : CMD ["./hellogodocker"]
 ---> Running in 4903aaef9861
Removing intermediate container 4903aaef9861
 ---> 2e74c7374c84
Successfully built 2e74c7374c84
Successfully tagged dockerhub/hellogo:bb30e49-dirty

real	0m10.197s
user	0m0.784s
sys	0m0.104s

-> change https://github.com/lotharschulz/hellogodocker/commit/b05eb81b915def84e49d5f34e788cdccb2ed1a6d

$ time make build.docker
go build -o hellogo -v
docker build --rm -t dockerhub/hellogo:30a1c48-dirty -f Dockerfile .
Sending build context to Docker daemon  21.12MB
Step 1/9 : FROM golang:1.10.3 as builder
 ---> 52057de6c8d0
Step 2/9 : WORKDIR /go/src/github.com/lotharschulz/hellogodocker/
 ---> Using cache
 ---> f1d4283ec3e7
Step 3/9 : COPY hello.go	.
 ---> b67fb4af0ccc
Step 4/9 : RUN CGO_ENABLED=0 GOOS=linux go build -a -installsuffix cgo -o hellogodocker .
 ---> Running in daa7df031bc3
Removing intermediate container daa7df031bc3
 ---> caeb057437e7
Step 5/9 : FROM alpine:latest
 ---> 3fd9065eaf02
Step 6/9 : RUN apk --no-cache add ca-certificates
 ---> Using cache
 ---> caef9b045e9d
Step 7/9 : WORKDIR /root/
 ---> Using cache
 ---> 088ddd566611
Step 8/9 : COPY --from=builder /go/src/github.com/lotharschulz/hellogodocker/hellogodocker .
 ---> 9ff8bfaf3f76
Step 9/9 : CMD ["./hellogodocker"]
 ---> Running in 0618095574be
Removing intermediate container 0618095574be
 ---> efd4479fbc1b
Successfully built efd4479fbc1b
Successfully tagged dockerhub/hellogo:30a1c48-dirty

real	0m10.262s
user	0m0.748s
sys	0m0.108s