version: 2

auth:
  username: $DOCKERHUB_USER
  password: $DOCKERHUB_PASSWORD  # or project environment variable reference

jobs:
  build:
    machine: true

    working_directory: ~/go/src/github.com/lotharschulz/hellogodocker
    steps:
      - checkout

      - run:
          name: Build service
          command: make

      - run: go get -v -t -d ./...
      - run: go test -v ./...
      - run:
          name: enable experimental docker deamon functionality
          command: |
            sudo sh -c 'echo '\''DOCKER_OPTS="--experimental=true"'\'' >> /etc/default/docker'
            sudo service docker restart
#      - run:
#          name: docker pull golang & alpine base image
#          command: |
#            docker pull golang:1.11
#      - run:
#          name: docker command build
#          command: |
#            TAG=docker-build-0.2.$CIRCLE_BUILD_NUM
#            time docker build -t lotharschulz/hellodocker:$TAG .
#            docker images
#            docker login -u $DOCKERHUB_USER -p $DOCKERHUB_PASSWORD
#            time docker push lotharschulz/hellodocker:$TAG
#            docker rmi -f $(docker images -q)
#            time docker pull lotharschulz/hellodocker:$TAG 
#            docker rmi -f $(docker images -q)

#      - run:
#          name: docker pull golang & alpine base image
#          command: |
#            docker pull golang:1.11
#      - run:
#          name: build.docker
#          command: |
#            IMG=lotharschulz/hellogo
#            TAG=build.docker--0.2.$CIRCLE_BUILD_NUM
#            echo "DOCKER_IMAGE=$IMG VERSION=$TAG time make build.docker" 
#            DOCKER_IMAGE=$IMG VERSION=$TAG time make build.docker
#            echo "docker images"
#            docker images
#            docker login -u $DOCKERHUB_USER -p $DOCKERHUB_PASSWORD
#            echo "docker push $IMG:$TAG"
#            time docker push $IMG:$TAG
#            docker rmi -f $(docker images -q)
#            echo "docker pull $IMG:$TAG"
#            time docker pull $IMG:$TAG
#            docker rmi -f $(docker images -q)

#      - run:
#          name: docker pull golang & alpine base image
#          command: |
#            docker pull golang:1.11
#            docker pull alpine:latest
      - run:
          name: build.docker-cache
          command: |
            IMG=lotharschulz/hellogo
            TAG=build.docker-cache--0.2.$CIRCLE_BUILD_NUM
            echo "DOCKER_IMAGE=$IMG VERSION=$TAG time make build.docker-cache"
            DOCKER_IMAGE=$IMG VERSION=$TAG time make build.docker-cache
            echo "docker images"
            docker images
            docker login -u $DOCKERHUB_USER -p $DOCKERHUB_PASSWORD
            echo "docker push $IMG:$TAG"
            time docker push $IMG:$TAG
            docker rmi -f $(docker images -q)
            echo "docker pull $IMG:$TAG"
            time docker pull $IMG:$TAG
            docker rmi -f $(docker images -q)
### hier weiter
      - run:
          name: docker pull golang & alpine base image
          command: |
            docker pull golang:1.11
            docker pull alpine:latest
      - run:
          name: build.dockerbuilder
          command: |
            time make build.dockerbuilder
            docker images
      - run:
          name: docker clean
          command: |
            docker rmi -f $(docker images -q)

      - run:
          name: docker pull golang & alpine base image
          command: |
            docker pull golang:1.11
            docker pull alpine:latest
      - run:
          name: build.dockerbuilder-cache
          command: |
            time make build.dockerbuilder-cache
            docker images
      - run:
          name: docker clean
          command: |
            docker rmi -f $(docker images -q)

      - run:
          name: build.dockerbuilder-nocache
          command: |
            time make build.dockerbuilder-nocache
            docker images
      - run:
          name: docker clean
          command: |
            docker rmi -f $(docker images -q)

      - run:
          name: docker pull golang & alpine base image
          command: |
            docker pull golang:1.11
            docker pull alpine:latest
      - run:
          name: build.dockerbuilder-squash
          command: |
            time make build.dockerbuilder-squash
            docker images
      - run:
          name: docker clean
          command: |
            docker rmi -f $(docker images -q)

      - run:
          name: docker pull golang & alpine base image
          command: |
            docker pull golang:1.11
            docker pull alpine:latest
      - run:
          name: build.dockerbuilder-compress
          command: |
            time make build.dockerbuilder-compress
            docker images
      - run:
          name: docker clean
          command: |
            docker rmi -f $(docker images -q)

      - run:
          name: build.docker-min
          command: |
            time make build.docker-min
            docker images
      - run:
          name: docker clean
          command: |
            docker rmi -f $(docker images -q)

      - run:
          name: build.docker-min-nocache
          command: |
            time make build.docker-min-nocache
            docker images
      - run:
          name: docker clean
          command: |
            docker rmi -f $(docker images -q)

      - run:
          name: build.docker-min-squash
          command: |
            time make build.docker-min-squash
            docker images
      - run:
          name: docker clean
          command: |
            docker rmi -f $(docker images -q)

      - run:
          name: build.docker-min-compress
          command: |
            time make build.docker-min-compress
            docker images
      - run:
          name: docker clean
          command: |
            docker rmi -f $(docker images -q)
